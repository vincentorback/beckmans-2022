.container {
  padding-top: var(--site-spacing);
  padding-bottom: var(--site-spacing);
  user-select: none;
  max-width: var(--site-width);
  margin: 0 auto;
}

@media (min-height: 800px) {
  .container {
    max-width: none;
  }
}

@media (min-height: 800px) and (max-height: 2000px) {
  .container {
    max-width: calc(
      (1376 / 802 * 100vh) - var(--header-height) - var(--site-spacing) * 7.5
    );
  }
}

.inner {
  margin: 0 auto;
  display: grid;
}

@media (min-width: 600px) {
  .inner {
    grid-template-columns: repeat(2, 1fr);
  }
}

.grid {
  position: relative;
  z-index: 2;
  display: grid;
  grid-template-columns: repeat(6, 7fr);
}

@media (min-width: 2200px) {
  .grid {
    grid-template-columns: repeat(7, 7fr);
  }
}

.item {
  position: relative;
  z-index: 0;
  height: 0;
  padding-bottom: 100%;
}

.item:not(.is-loaded),
.item:not(.is-visible) {
  pointer-events: none;
}

.item.is-visible {
  z-index: 1;
}

.item.is-extra .link {
  color: #fff;
  background-color: #000;
}

.link {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  opacity: 1;
  transition: opacity 150ms ease;
  background-color: var(--color);
}

.item:not(.is-loaded) .link,
.item:not(.is-visible) .link {
  opacity: 0;
}

.itemInner {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.item a {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 100%;
  height: 100%;
}

.image {
  z-index: 0;
  width: 100%;
  height: 100%;
  transform: scale(4) translateZ(0);
}

.dots {
  position: absolute;
  z-index: 2;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.item:not(.is-loaded) .dots {
  animation: pulse 2000ms ease infinite;
}

@keyframes pulse {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.dots div {
  position: absolute;
  top: 0;
  left: 0;
  width: 4px;
  height: 4px;
  transform: translate(-50%, -50%);
  background-color: var(--color-white);
  transition: opacity 150ms ease, transform 150ms ease,
    background-color 900ms ease;
}

.item:not(.is-loaded) .dots div {
  background-color: var(--color-black);
}

.dots div:nth-child(2),
.dots div:nth-child(5),
.dots div:nth-child(8) {
  left: 50%;
}

.dots div:nth-child(3),
.dots div:nth-child(6),
.dots div:nth-child(9) {
  left: 100%;
}

.dots div:nth-child(4),
.dots div:nth-child(5),
.dots div:nth-child(6) {
  top: 50%;
}

.dots div:nth-child(7),
.dots div:nth-child(8),
.dots div:nth-child(9) {
  top: 100%;
}

.windowItem {
  position: relative;
  z-index: 1;
  height: 0;
  padding-bottom: 100%;
  width: 100%;
}

.windowItem.is-loaded.is-active {
  background-color: var(--color-red);
}

@media (min-width: 600px) {
  .windowItem {
    height: 100%;
    padding-bottom: 0;
  }
}

.windowItemImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.windowLink,
.windowContent {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 1;
}

.windowContent p {
  position: absolute;
  left: 0;
  right: 0;
  transform: translateY(-50%);
  padding: var(--site-spacing);
  display: block;

  text-align: center;
  font-weight: var(--text-bold);
  color: var(--color-white);
  font-size: clamp(2rem, 5vw, 4rem);
  line-height: 1.25;
  text-shadow: rgba(0, 0, 0, 0.15) 1px 1px 20px;

  white-space: pre-line;
}

.windowContent p:first-child {
  top: calc(100% / 3);
}

.windowContent p:last-child {
  top: calc(100% / 1.5);
}

.windowDots {
  position: absolute;
  z-index: 2;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.windowItem:not(.is-loaded) .windowDots {
  animation: pulse 2000ms ease infinite;
}

@keyframes pulse {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.windowDots div {
  position: absolute;
  top: calc((100% / 14) * var(--row));
  left: calc((100% / 14) * (var(--cell) + 1));
  width: 4px;
  height: 4px;
  transform: translate(-50%, -50%);
  background-color: var(--color-black);
  line-height: 0.22;
  transition: opacity 150ms ease, transform 150ms ease,
    background-color 150ms ease;
}

.windowItem.is-loaded .windowDots div {
  background-color: var(--color-white);
  opacity: 0;
}

.windowItem.is-loaded .windowDots div {
  background-color: var(--color-white);
}
